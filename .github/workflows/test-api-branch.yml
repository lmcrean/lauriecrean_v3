name: Test API Branch Deployment

on:
  workflow_call:
    inputs:
      api_deployment_url:
        required: true
        type: string
      branch_name:
        required: true
        type: string
      pr_number:
        required: true
        type: string

jobs:
  test-api:
    runs-on: ubuntu-latest
    
    steps:
      - name: 🛒 Checkout Repository
        uses: actions/checkout@v4
      
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: e2e/package-lock.json
      
      - name: 📥 Install E2E Dependencies
        run: |
          cd e2e
          npm ci
      
      - name: 🔧 Build Observability Package
        run: |
          echo "🔍 Current directory: $(pwd)"
          echo "📁 Listing root directory:"
          ls -la
          echo "📁 Checking if packages directory exists:"
          ls -la packages/ || echo "❌ packages directory not found"
          echo "📁 Checking if packages/observability exists:"
          ls -la packages/observability/ || echo "❌ packages/observability directory not found"
          
          if [ -d "packages/observability" ]; then
            echo "✅ packages/observability directory found, proceeding with build"
            cd packages/observability
            npm ci
            npm run build
          else
            echo "❌ packages/observability directory not found, skipping build"
          fi
      
      - name: 🧪 Test API Health Check
        run: |
          echo "🏥 Testing API health at: ${{ inputs.api_deployment_url }}"
          
          # Test health endpoint with retry
          for i in {1..5}; do
            echo "🔍 Health check attempt $i/5..."
            
            # More detailed curl with better error handling
            echo "🔧 Making curl request..."
            HTTP_STATUS=$(curl -w "%{http_code}" -s -o /tmp/response.txt -m 30 "${{ inputs.api_deployment_url }}/health")
            CURL_EXIT_CODE=$?
            
            echo "📊 HTTP Status: $HTTP_STATUS"
            echo "🔍 Curl Exit Code: $CURL_EXIT_CODE"
            
            if [ $CURL_EXIT_CODE -eq 0 ] && [ "$HTTP_STATUS" -eq 200 ]; then
              echo "✅ API is healthy!"
              echo "📄 Response:"
              cat /tmp/response.txt
              break
            else
              echo "❌ Health check failed"
              echo "🔍 HTTP Status: $HTTP_STATUS"
              echo "🔍 Curl Exit Code: $CURL_EXIT_CODE"
              echo "📄 Response (if any):"
              cat /tmp/response.txt || echo "No response body"
              
              # Additional debugging
              echo "🔍 Testing basic connectivity..."
              curl -I -s -m 10 "${{ inputs.api_deployment_url }}" || echo "Basic connectivity test failed"
              
              if [ $i -eq 5 ]; then
                echo "❌ API health check failed after 5 attempts"
                exit 1
              fi
            fi
            
            echo "⏳ Waiting 10 seconds before retry..."
            sleep 10
          done
      
      - name: 🧪 Run API Health Tests
        run: |
          cd e2e
          echo "🏥 Running API health tests at: ${{ inputs.api_deployment_url }}"
          npm run test:prod-branch:api:health
        env:
          API_BASE_URL: ${{ inputs.api_deployment_url }}
          API_DEPLOYMENT_URL: ${{ inputs.api_deployment_url }}
          CLOUD_RUN_URL: ${{ inputs.api_deployment_url }}
          GITHUB_USERNAME: lmcrean
          TEST_USERNAME: lmcrean
          BRANCH_NAME: ${{ inputs.branch_name }}
          GITHUB_HEAD_REF: ${{ inputs.branch_name }}
      
      - name: 🧪 Run Pull Request Feed API Tests
        run: |
          cd e2e
          echo "🎯 Running PR Feed API tests at: ${{ inputs.api_deployment_url }}"
          npm run test:prod-branch:api:pr-feed
        env:
          API_BASE_URL: ${{ inputs.api_deployment_url }}
          API_DEPLOYMENT_URL: ${{ inputs.api_deployment_url }}
          CLOUD_RUN_URL: ${{ inputs.api_deployment_url }}
          GITHUB_USERNAME: lmcrean
          TEST_USERNAME: lmcrean
          BRANCH_NAME: ${{ inputs.branch_name }}
          GITHUB_HEAD_REF: ${{ inputs.branch_name }}
      
      - name: 🧪 Run Pull Request Detail API Tests
        run: |
          cd e2e
          echo "🎯 Running PR Detail API tests at: ${{ inputs.api_deployment_url }}"
          npm run test:prod-branch:api:pr-detail
        env:
          API_BASE_URL: ${{ inputs.api_deployment_url }}
          API_DEPLOYMENT_URL: ${{ inputs.api_deployment_url }}
          CLOUD_RUN_URL: ${{ inputs.api_deployment_url }}
          GITHUB_USERNAME: lmcrean
          TEST_USERNAME: lmcrean
          BRANCH_NAME: ${{ inputs.branch_name }}
          GITHUB_HEAD_REF: ${{ inputs.branch_name }}
      
      - name: 📊 Test Summary
        if: always()
        run: |
          echo "🎯 API Testing Complete!"
          echo "📍 API URL: ${{ inputs.api_deployment_url }}"
          echo "🌿 Branch: ${{ inputs.branch_name }}"
          echo "🔢 PR: #${{ inputs.pr_number }}"
          
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ All API tests passed!"
          else
            echo "❌ Some API tests failed - check logs above"
          fi
      
      - name: 📋 Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: api-test-results-pr-${{ inputs.pr_number }}
          path: |
            e2e/test-results/
            e2e/playwright-report/
          retention-days: 7 